#!/usr/bin/env python3
import hashlib
import os
import platform
import sys
import urllib.request
import zipfile

PB_VER = "0.22.12"
PB_BASE_URL = "https://github.com/pocketbase/pocketbase/releases/download"
PB_CHECKSUM_FILE = "checksums.txt"


def main():
    cpu = platform.processor()
    arch = {"x86_64": "amd64", "arm": "arm64"}.get(cpu, cpu)
    plat = {"win32": "windows"}.get(sys.platform, sys.platform)
    zip_fn = f"pocketbase_{PB_VER}_{plat}_{arch}.zip"
    url = f"{PB_BASE_URL}/v{PB_VER}/{zip_fn}"

    is_new_zip_file = not os.path.exists(zip_fn)
    if is_new_zip_file:
        with open(PB_CHECKSUM_FILE, "r") as csum_file:
            csum_data = csum_file.read()
        if zip_fn not in csum_data:
            csum_url = f"{PB_BASE_URL}/v{PB_VER}/{PB_CHECKSUM_FILE}"
            ans = input(f"Do you want to update {PB_CHECKSUM_FILE}? [Y/n] ")
            if ans.lower() in ("y", "yes", ""):
                urllib.request.urlretrieve(csum_url, PB_CHECKSUM_FILE)
                with open(PB_CHECKSUM_FILE, "r") as csum_file:
                    csum_data = csum_file.read()
            else:
                raise SystemExit(f"{zip_fn} not found from {PB_CHECKSUM_FILE}")
        print(f"Downloading PocketBase from: {url}")
        urllib.request.urlretrieve(url, zip_fn)

        with open(zip_fn, "rb") as fp:
            csum = hashlib.sha256(fp.read()).hexdigest()
        if csum not in csum_data:
            os.remove(zip_fn)
            raise SystemExit(f"Invalid checksum {csum}")
        print(f"Checksum OK ({csum})")

    pb_exe = f"pocketbase{'.exe' if sys.platform == 'win32' else ''}"
    if is_new_zip_file or not os.path.exists(pb_exe):
        print(f"Unzipping {zip_fn}")
        with zipfile.ZipFile(zip_fn, "r") as zipf:
            zipf.extractall()
            if not pb_exe.endswith(".exe"):
                os.chmod(pb_exe, 0o777 & ~os.umask(0o022))


if __name__ == "__main__":
    main()
